{"version":3,"sources":["services/UserService.js","views/management/CustomerListView/Header.js","views/management/CustomerListView/Results.js","views/management/CustomerListView/index.js"],"names":["CompanyService","getAllCustomers","get","blockCustomer","userId","status","post","getAllVendors","blockVendor","GenericService","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","actionIcon","marginRight","Header","className","rest","classes","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Box","mt","queryField","width","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","default","bulkAction","avatar","height","mailColor","textDecoration","text","primary","formControl","Results","customers","updateUser","useState","selectedCustomers","enqueueSnackbar","useSnackbar","users","setUsers","dropdown","setDropdown","useEffect","list","map","user","email","push","id","_id","value","Card","Divider","p","minHeight","display","alignItems","flexGrow","minWidth","justifyContent","length","Autocomplete","options","getOptionLabel","option","renderInput","params","TextField","label","onChange","event","data","selected","filter","x","handleFilter","Table","TableHead","TableRow","TableCell","align","TableBody","customer","isCustomerSelected","includes","hover","key","Avatar","alt","name","src","profilePicture","title","href","isVerified","IconButton","onClick","UserService","isBlocked","then","res","console","log","message","catch","err","SvgIcon","style","defaultProps","dark","paddingTop","paddingBottom","UserListView","getUsers","useCallback","Page","Container","maxWidth"],"mappings":"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","file":"static/js/9.725a7181.chunk.js","sourcesContent":["// import axios from 'axios';\r\n// import axiosInstance from './axiosInstance';\r\nimport { GenericService } from './GenericService';\r\n\r\nclass CompanyService extends GenericService {\r\n  constructor() {\r\n    super('/api/user');\r\n  }\r\n  getAllCustomers = () => this.get('/admin/account/user/allCustomers');\r\n  blockCustomer = (userId, status) => this.post('/admin/account/user/blockCustomer', {userId: userId, status: status});\r\n  getAllVendors = () => this.get('/admin/account/user/allVendors');\r\n  blockVendor = (userId, status) => this.post('/admin/account/user/blockVendor', {userId: userId, status: status});\r\n\r\n}\r\n\r\nexport default new CompanyService();\r\n","import React from 'react';\r\n// import { useHistory } from 'react-router';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  // Button,\r\n  Grid,\r\n  Link,\r\n  // SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n// import {\r\n//   PlusCircle as PlusCircleIcon,\r\n//   Download as DownloadIcon,\r\n//   Upload as UploadIcon\r\n// } from 'react-feather';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  action: {\r\n    marginBottom: theme.spacing(1),\r\n    '& + &': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  actionIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Header({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  // const history = useHistory();\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link variant=\"body1\" color=\"inherit\" to=\"#\" component={RouterLink}>\r\n            Dashboard\r\n          </Link>\r\n          <Link variant=\"body1\" color=\"inherit\" to=\"#\" component={RouterLink}>\r\n            Management\r\n          </Link>\r\n          <Typography variant=\"body1\" color=\"textPrimary\">\r\n            Customers\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography variant=\"h3\" color=\"textPrimary\">\r\n          All Customers\r\n        </Typography>\r\n        <Box mt={2}></Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable max-len */\r\nimport React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Divider,\r\n  IconButton,\r\n  SvgIcon,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  makeStyles,\r\n  TextField,\r\n  Avatar,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  UserX as ProfileUnCompleteIcon,\r\n  UserCheck as ProfileCompleteIcon,\r\n  XCircle as BlockedIcon,\r\n  CheckCircle as UnblockedIcon,\r\n} from 'react-feather';\r\nimport UserService from 'src/services/UserService';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  queryField: {\r\n    width: 500\r\n  },\r\n  bulkOperations: {\r\n    position: 'relative'\r\n  },\r\n  bulkActions: {\r\n    paddingLeft: 4,\r\n    paddingRight: 4,\r\n    marginTop: 6,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    zIndex: 2,\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  bulkAction: {\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  avatar: {\r\n    height: 42,\r\n    width: 42,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  mailColor:{\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.primary\r\n  },\r\n  formControl: {\r\n    width: 300\r\n  }\r\n}));\r\n\r\nfunction Results({ className, customers, updateUser, ...rest }) {\r\n\r\n  const classes = useStyles();\r\n  const [selectedCustomers] = useState([]);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [users, setUsers] = useState(customers);\r\n  const [dropdown, setDropdown] = useState();\r\n\r\n  useEffect(() => {\r\n    let list = []\r\n\r\n    customers.map(user => {\r\n      if(user?.email){\r\n        list.push({\r\n          id: user?._id,\r\n          value: user?.email\r\n        })\r\n      }\r\n      return 0\r\n    })\r\n\r\n    setDropdown(list)\r\n\r\n  }, [customers])\r\n\r\n  const handleFilter = (data) => {\r\n\r\n    if(data){\r\n\r\n      let list = users\r\n\r\n      const selected = list.filter(x => x._id === data.id)\r\n\r\n      setUsers(selected)\r\n    }else{\r\n      setUsers(customers)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Divider />\r\n\r\n      <Box p={2} minHeight={56} display=\"flex\" alignItems=\"center\">\r\n        <Box flexGrow={1} />\r\n      </Box>\r\n\r\n      <PerfectScrollbar>\r\n        <Box minWidth={700}>\r\n          <Box p={2} display='flex' justifyContent='space-between'>\r\n            <Box display='flex' alignItems='center'>\r\n              <Typography variant='h3'>\r\n                Total Customers: {users.length}\r\n              </Typography>\r\n            </Box>\r\n            <Autocomplete\r\n              className={classes.formControl}\r\n              id=\"combo-box-demo\"\r\n              options={dropdown}\r\n              getOptionLabel={(option) => option.value}\r\n              renderInput={(params) => <TextField variant='outlined' {...params} label=\"Select Email\" />}\r\n              onChange={(event, value) => handleFilter(value)}\r\n            />\r\n          </Box>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\"></TableCell>\r\n                <TableCell align=\"left\">Username</TableCell>\r\n                <TableCell align=\"left\">Email</TableCell>\r\n                <TableCell align=\"center\">Verified User</TableCell>\r\n                <TableCell align=\"center\">User Blocked</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users.map(customer => {\r\n                const isCustomerSelected = selectedCustomers.includes(\r\n                  customer.id\r\n                );\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    key={customer?._id}\r\n                    selected={isCustomerSelected}\r\n                  >\r\n                    <TableCell align=\"left\">\r\n                      <Avatar alt={customer?.name} src={customer?.profilePicture} />\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">{customer?.name}</TableCell>\r\n                    <TableCell align=\"left\" title=\"mailto\"><a href={`mailto:${customer?.email}`} className={classes.mailColor}>{customer?.email}</a></TableCell>\r\n                    <TableCell align=\"center\">{customer?.isVerified ? <ProfileCompleteIcon/> : <ProfileUnCompleteIcon/>}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          UserService.blockCustomer(customer?._id, customer?.isBlocked)\r\n                            .then(res => {\r\n                              updateUser(null)\r\n                              console.log('RES: ', res);\r\n                              enqueueSnackbar(res.message , {\r\n                                variant: 'success'\r\n                              });\r\n                              updateUser(res.data)\r\n                            })\r\n                            .catch(err => {\r\n                              enqueueSnackbar('Unable to update user profile' , {\r\n                                variant: 'error'\r\n                              });\r\n                              console.log('ERR: ', err)\r\n                            });\r\n                        }}\r\n                      >\r\n                        <SvgIcon fontSize=\"small\">\r\n                          {\r\n                            customer?.isBlocked ? <BlockedIcon style={{color: 'red'}}/> : <UnblockedIcon/>\r\n                          }\r\n                        </SvgIcon>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array\r\n};\r\n\r\nResults.defaultProps = {\r\n  customers: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Box, Container, makeStyles } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Header from './Header';\r\nimport Results from './Results';\r\nimport UserService from 'src/services/UserService';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction UserListView() {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState(null);\r\n\r\n  const getUsers = useCallback(() => {\r\n    UserService.getAllCustomers().then(res => {\r\n      console.log('RES: ', res);\r\n      setUsers(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const updateUser = (users) => {\r\n    console.log('users updates', users);\r\n    setUsers(users)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [getUsers]);\r\n\r\n  if (!users) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"No Left Over Ever - Customers\">\r\n      <Container maxWidth={false}>\r\n        <Header />\r\n        {users && (\r\n          <Box mt={3}>\r\n            <Results customers={users} updateUser={updateUser} />\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default UserListView;\r\n"],"sourceRoot":""}