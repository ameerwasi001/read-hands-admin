{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/auth/RegisterView/RegisterForm.js","views/auth/RegisterView/index.js"],"names":["CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","role","undefined","event","input","newChecked","target","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","useStyles","makeStyles","RegisterForm","onSubmitSuccess","rest","dispatch","useDispatch","initialValues","firstName","lastName","email","password","policy","validationSchema","Yup","shape","max","min","oneOf","onSubmit","values","setErrors","setStatus","setSubmitting","register","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","TextField","error","fullWidth","helperText","label","variant","Box","alignItems","display","mt","ml","Typography","Link","href","FormHelperText","Button","justifyContent","background","dark","minHeight","flexDirection","paddingTop","RegisterView","history","useHistory","Page","title","Container","maxWidth","mb","to","Logo","RouterLink","backButton","Card","gutterBottom","push","my","Divider"],"mappings":";+JAAA,uCAeIA,EAA2BC,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQC,YAAyBR,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBO,EAAWG,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BF,IAAKA,GACJM,OAgCUK,gBAnDK,CAElBD,KAAM,CACJE,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCC,KAAM,kBADOH,CAEZd,I,4GCzBCkB,EAA0BjB,cAAiB,SAAoBC,EAAOC,GACxE,IAAIgB,EAAYjB,EAAMiB,UAClBC,EAAclB,EAAMmB,QACpBC,EAAcpB,EAAMoB,YACpBlB,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBkB,EAAiBrB,EAAMqB,eACvBC,EAAetB,EAAMuB,SACrBC,EAAOxB,EAAMwB,KACbC,EAAKzB,EAAMyB,GACXC,EAAa1B,EAAM0B,WACnBC,EAAW3B,EAAM2B,SACjBZ,EAAOf,EAAMe,KACba,EAAS5B,EAAM4B,OACfC,EAAW7B,EAAM6B,SACjBC,EAAU9B,EAAM8B,QAChBC,EAAW/B,EAAM+B,SACjBC,EAAWhC,EAAMgC,SACjBC,EAAWjC,EAAMiC,SACjBC,EAAOlC,EAAMkC,KACbC,EAAQnC,EAAMmC,MACd5B,EAAQC,YAAyBR,EAAO,CAAC,YAAa,UAAW,cAAe,UAAW,YAAa,iBAAkB,WAAY,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,UAEnQoC,EAAiBC,YAAc,CACjCC,WAAYpB,EACZqB,QAASC,QAAQnB,GACjBN,KAAM,aACN0B,MAAO,YAELC,EAAkBC,YAAeP,EAAgB,GACjDjB,EAAUuB,EAAgB,GAC1BE,EAAkBF,EAAgB,GAElCG,EAAiBC,cAgCjBvB,EAAWD,EAEXuB,GACsB,qBAAbtB,IACTA,EAAWsB,EAAetB,UAI9B,IAAIwB,EAAuB,aAATb,GAAgC,UAATA,EACzC,OAAoBnC,gBAAoBiD,IAAYvC,YAAS,CAC3DJ,UAAW,OACXF,UAAWO,YAAKR,EAAQS,KAAMR,EAAWgB,GAAWjB,EAAQiB,QAASI,GAAYrB,EAAQqB,UACzFA,SAAUA,EACVU,SAAU,KACVgB,UAAMC,EACNpB,QA7CgB,SAAqBqB,GACjCrB,GACFA,EAAQqB,GAGNN,GAAkBA,EAAef,SACnCe,EAAef,QAAQqB,IAwCzBvB,OApCe,SAAoBuB,GAC/BvB,GACFA,EAAOuB,GAGLN,GAAkBA,EAAejB,QACnCiB,EAAejB,OAAOuB,IA+BxBlD,IAAKA,GACJM,GAAqBR,gBAAoB,QAASU,YAAS,CAC5DQ,UAAWA,EACXE,QAASD,EACTG,eAAgBA,EAChBlB,UAAWD,EAAQkD,MACnB7B,SAAUA,EACVE,GAAIsB,GAAetB,EACnBV,KAAMA,EACNc,SApCsB,SAA2BsB,GACjD,IAAIE,EAAaF,EAAMG,OAAOnC,QAC9ByB,EAAgBS,GAEZxB,GAEFA,EAASsB,EAAOE,IA+BlBtB,SAAUA,EACV9B,IAAK0B,EACLK,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACNC,MAAOA,GACNT,IAAcP,EAAUC,EAAcI,MA8G5BZ,cAvOK,CAClBD,KAAM,CACJE,QAAS,GAEXM,QAAS,GACTI,SAAU,GACV6B,MAAO,CACLG,OAAQ,UACRC,SAAU,WACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRjD,QAAS,EACTkD,OAAQ,IAuNsB,CAChChD,KAAM,qBADOH,CAEZI,G,SC9OYgD,cAA4BjE,gBAAoB,OAAQ,CACrEkE,EAAG,+FACD,wBCFWD,cAA4BjE,gBAAoB,OAAQ,CACrEkE,EAAG,wIACD,Y,QCFWD,cAA4BjE,gBAAoB,OAAQ,CACrEkE,EAAG,kGACD,yB,OCwDAC,EAAkCnE,gBAAoBoE,EAAc,MACpEC,EAA2BrE,gBAAoBsE,EAA0B,MACzEC,EAAwCvE,gBAAoBwE,EAA2B,MACvFC,EAAwBzE,cAAiB,SAAkBC,EAAOC,GACpE,IAAIwE,EAAqBzE,EAAMoB,YAC3BA,OAAqC,IAAvBqD,EAAgCP,EAAqBO,EACnEvE,EAAUF,EAAME,QAChBwE,EAAe1E,EAAM2E,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDE,EAAc5E,EAAMwB,KACpBqD,OAA2B,IAAhBD,EAAyBR,EAAcQ,EAClDE,EAAuB9E,EAAM+E,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAwBhF,EAAMiF,kBAC9BC,OAAkD,IAA1BF,EAAmCV,EAA2BU,EACtFtD,EAAa1B,EAAM0B,WACnByD,EAAcnF,EAAMoF,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3C5E,EAAQC,YAAyBR,EAAO,CAAC,cAAe,UAAW,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,SAExIwB,EAAOuD,EAAgBG,EAAwBL,EAC/CI,EAAoBF,EAAgBG,EAAwB9D,EAChE,OAAoBrB,gBAAoBiB,EAAYP,YAAS,CAC3DyB,KAAM,WACNhC,QAAS,CACPS,KAAMD,YAAKR,EAAQS,KAAMT,EAAQ,QAAQmF,OAAOC,YAAWX,KAAUI,GAAiB7E,EAAQ6E,eAC9F5D,QAASjB,EAAQiB,QACjBI,SAAUrB,EAAQqB,UAEpBoD,MAAOA,EACPjD,WAAYjB,YAAS,CACnB,qBAAsBsE,GACrBrD,GACHF,KAAmBzB,eAAmByB,EAAM,CAC1C+D,cAAkCrC,IAAxB1B,EAAKxB,MAAMuF,UAAmC,UAATH,EAAmBA,EAAO5D,EAAKxB,MAAMuF,WAEtFnE,YAA0BrB,eAAmBkF,EAAmB,CAC9DM,cAA+CrC,IAArC+B,EAAkBjF,MAAMuF,UAAmC,UAATH,EAAmBA,EAAOH,EAAkBjF,MAAMuF,WAEhHtF,IAAKA,GACJM,OAiGUK,iBA5LK,SAAgB4E,GAClC,MAAO,CAEL7E,KAAM,CACJgE,MAAOa,EAAMC,QAAQC,KAAKC,WAI5BxE,QAAS,GAGTI,SAAU,GAGVwD,cAAe,GAGfa,aAAc,CACZ,YAAa,CACXjB,MAAOa,EAAMC,QAAQI,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAMR,EAAMC,QAAQI,QAAQC,KAAMN,EAAMC,QAAQQ,OAAOC,cAExE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZpB,MAAOa,EAAMC,QAAQQ,OAAO1E,WAKhC4E,eAAgB,CACd,YAAa,CACXxB,MAAOa,EAAMC,QAAQE,UAAUG,KAC/B,UAAW,CACTC,gBAAiBC,YAAMR,EAAMC,QAAQE,UAAUG,KAAMN,EAAMC,QAAQQ,OAAOC,cAE1E,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZpB,MAAOa,EAAMC,QAAQQ,OAAO1E,cA8IF,CAChCR,KAAM,eADOH,CAEZ4D,I,4lNCzLH,IAAM4B,EAAYC,aAAW,iBAAO,CAClC1F,KAAM,OAGR,SAAS2F,EAAT,GAAgE,IAAxCnG,EAAuC,EAAvCA,UAAWoG,EAA4B,EAA5BA,gBAAoBC,EAAQ,iBACvDtG,EAAUkG,IACVK,EAAWC,cAEjB,OACE,kBAAC,IAAD,CACEC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,QAAQ,GAEVC,iBAAkBC,MAAaC,MAAM,CACnCP,UAAWM,MAAaE,IAAI,KAAKpF,SAAS,0BAC1C6E,SAAUK,MAAaE,IAAI,KAAKpF,SAAS,yBACzC8E,MAAOI,MAAaJ,MAAM,yBAAyBM,IAAI,KAAKpF,SAAS,qBACrE+E,SAAUG,MAAaG,IAAI,GAAGD,IAAI,KAAKpF,SAAS,wBAChDgF,OAAQE,MAAcI,MAAM,EAAC,GAAO,gCAEtCC,SAAQ,uCAAE,WAAOC,EAAP,qFACRC,EADQ,EACRA,UACAC,EAFQ,EAERA,UACAC,EAHQ,EAGRA,cAHQ,kBAMAlB,EAASmB,YAASJ,IANlB,OAONjB,IAPM,gDASNmB,EAAU,CAAEG,SAAS,IACrBJ,EAAU,CAAEK,OAAQ,KAAMC,UAC1BJ,GAAc,GAXR,yDAAF,0DAeP,gBACCK,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAb,EAPD,EAOCA,OAPD,OASC,wCACErH,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BoH,SAAUY,GACN3B,GAEJ,kBAAC8B,EAAA,EAAD,CACEC,MAAO/F,QAAQ6F,EAAQzB,WAAaoB,EAAOpB,WAC3C4B,WAAS,EACTC,WAAYJ,EAAQzB,WAAaoB,EAAOpB,UACxC8B,MAAM,aACN5E,OAAO,SACP/C,KAAK,YACLa,OAAQqG,EACRpG,SAAUqG,EACVhG,KAAK,YACLC,MAAOqF,EAAOZ,UACd+B,QAAQ,aAEV,kBAACL,EAAA,EAAD,CACEC,MAAO/F,QAAQ6F,EAAQxB,UAAYmB,EAAOnB,UAC1C2B,WAAS,EACTC,WAAYJ,EAAQxB,UAAYmB,EAAOnB,SACvC6B,MAAM,YACN5E,OAAO,SACP/C,KAAK,WACLa,OAAQqG,EACRpG,SAAUqG,EACVhG,KAAK,WACLC,MAAOqF,EAAOX,SACd8B,QAAQ,aAEV,kBAACL,EAAA,EAAD,CACEC,MAAO/F,QAAQ6F,EAAQvB,OAASkB,EAAOlB,OACvC0B,WAAS,EACTC,WAAYJ,EAAQvB,OAASkB,EAAOlB,MACpC4B,MAAM,gBACN5E,OAAO,SACP/C,KAAK,QACLa,OAAQqG,EACRpG,SAAUqG,EACVhG,KAAK,QACLC,MAAOqF,EAAOV,MACd6B,QAAQ,aAEV,kBAACL,EAAA,EAAD,CACEC,MAAO/F,QAAQ6F,EAAQtB,UAAYiB,EAAOjB,UAC1CyB,WAAS,EACTC,WAAYJ,EAAQtB,UAAYiB,EAAOjB,SACvC2B,MAAM,WACN5E,OAAO,SACP/C,KAAK,WACLa,OAAQqG,EACRpG,SAAUqG,EACVhG,KAAK,WACLC,MAAOqF,EAAOT,SACd4B,QAAQ,aAEV,kBAACC,EAAA,EAAD,CACEC,WAAW,SACXC,QAAQ,OACRC,GAAI,EACJC,IAAK,GAEL,kBAACxE,EAAA,EAAD,CACErD,QAASqG,EAAOR,OAChBjG,KAAK,SACLc,SAAUqG,IAEZ,kBAACe,EAAA,EAAD,CACEN,QAAQ,QACRhE,MAAM,iBAFR,kBAKG,IACD,kBAACuE,EAAA,EAAD,CACE7I,UAAU,IACV8I,KAAK,IACLxE,MAAM,aAHR,0BASHnC,QAAQ6F,EAAQrB,QAAUgB,EAAOhB,SAChC,kBAACoC,EAAA,EAAD,CAAgBb,OAAK,GAClBP,EAAOhB,QAGZ,kBAAC4B,EAAA,EAAD,CAAKG,GAAI,GACP,kBAACM,EAAA,EAAD,CACE1E,MAAM,YACNpD,SAAU6G,EACVI,WAAS,EACTpD,KAAK,QACLlD,KAAK,SACLyG,QAAQ,aANV,uBAsBZrC,EAAa/D,QAAU,CACrBgE,gBAAiB,cAGJD,QCnKTF,EAAYC,aAAW,SAACb,GAAD,MAAY,CACvC7E,KAAM,CACJ2I,eAAgB,SAChBvD,gBAAiBP,EAAMC,QAAQ8D,WAAWC,KAC1CV,QAAS,OACTnF,OAAQ,OACR8F,UAAW,OACXC,cAAe,SACf5I,cAAe,GACf6I,WAAY,QAmEDC,UA/Df,WACE,IAAM1J,EAAUkG,IACVyD,EAAUC,cAMhB,OACE,kBAACC,EAAA,EAAD,CACE5J,UAAWD,EAAQS,KACnBqJ,MAAM,YAEN,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACtB,EAAA,EAAD,CACEuB,GAAI,EACJrB,QAAQ,OACRD,WAAW,UAEX,kBAAC,IAAD,CAAYuB,GAAG,KACb,kBAACC,EAAA,EAAD,OAEF,kBAAChB,EAAA,EAAD,CACEhJ,UAAWiK,IACXF,GAAG,IACHjK,UAAWD,EAAQqK,YAHrB,iBAQF,kBAACC,EAAA,EAAD,KACE,kBAAC1K,EAAA,EAAD,KACE,kBAACmJ,EAAA,EAAD,CACEwB,cAAY,EACZ9B,QAAQ,KACRhE,MAAM,eAHR,WAOA,kBAACsE,EAAA,EAAD,CAAYN,QAAQ,aAApB,oCAGA,kBAACC,EAAA,EAAD,CAAKG,GAAI,GACP,kBAAC,EAAD,CAAcxC,gBAvCE,WAC1BsD,EAAQa,KAAK,kBAwCL,kBAAC9B,EAAA,EAAD,CAAK+B,GAAI,GACP,kBAACC,EAAA,EAAD,OAEF,kBAAC1B,EAAA,EAAD,CACE7I,UAAWiK,IACXF,GAAG,SACHzB,QAAQ,QACRhE,MAAM,iBAJR","file":"static/js/3.60ad2507.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormHelperText,\r\n  TextField,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { register } from 'src/actions/accountActions';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nfunction RegisterForm({ className, onSubmitSuccess, ...rest }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        policy: false\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        firstName: Yup.string().max(255).required('First name is required'),\r\n        lastName: Yup.string().max(255).required('Last name is required'),\r\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n        password: Yup.string().min(7).max(255).required('Password is required'),\r\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n      })}\r\n      onSubmit={async (values, {\r\n        setErrors,\r\n        setStatus,\r\n        setSubmitting\r\n      }) => {\r\n        try {\r\n          await dispatch(register(values));\r\n          onSubmitSuccess();\r\n        } catch (error) {\r\n          setStatus({ success: false });\r\n          setErrors({ submit: error.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values\r\n      }) => (\r\n        <form\r\n          className={clsx(classes.root, className)}\r\n          onSubmit={handleSubmit}\r\n          {...rest}\r\n        >\r\n          <TextField\r\n            error={Boolean(touched.firstName && errors.firstName)}\r\n            fullWidth\r\n            helperText={touched.firstName && errors.firstName}\r\n            label=\"First Name\"\r\n            margin=\"normal\"\r\n            name=\"firstName\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"firstName\"\r\n            value={values.firstName}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.lastName && errors.lastName)}\r\n            fullWidth\r\n            helperText={touched.lastName && errors.lastName}\r\n            label=\"Last Name\"\r\n            margin=\"normal\"\r\n            name=\"lastName\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"lastName\"\r\n            value={values.lastName}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.email && errors.email)}\r\n            fullWidth\r\n            helperText={touched.email && errors.email}\r\n            label=\"Email Address\"\r\n            margin=\"normal\"\r\n            name=\"email\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.password && errors.password)}\r\n            fullWidth\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <Box\r\n            alignItems=\"center\"\r\n            display=\"flex\"\r\n            mt={2}\r\n            ml={-1}\r\n          >\r\n            <Checkbox\r\n              checked={values.policy}\r\n              name=\"policy\"\r\n              onChange={handleChange}\r\n            />\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              I have read the\r\n              {' '}\r\n              <Link\r\n                component=\"a\"\r\n                href=\"#\"\r\n                color=\"secondary\"\r\n              >\r\n                Terms and Conditions\r\n              </Link>\r\n            </Typography>\r\n          </Box>\r\n          {Boolean(touched.policy && errors.policy) && (\r\n            <FormHelperText error>\r\n              {errors.policy}\r\n            </FormHelperText>\r\n          )}\r\n          <Box mt={2}>\r\n            <Button\r\n              color=\"secondary\"\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Create account\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nRegisterForm.propTypes = {\r\n  className: PropTypes.string,\r\n  onSubmitSuccess: PropTypes.func\r\n};\r\n\r\nRegisterForm.default = {\r\n  onSubmitSuccess: () => {}\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  Link,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Logo from 'src/components/Logo';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    justifyContent: 'center',\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    minHeight: '100%',\r\n    flexDirection: 'column',\r\n    paddingBottom: 80,\r\n    paddingTop: 80\r\n  }\r\n}));\r\n\r\nfunction RegisterView() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleSubmitSuccess = () => {\r\n    history.push('/app/login');\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Container maxWidth=\"sm\">\r\n        <Box\r\n          mb={5}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <RouterLink to=\"/\">\r\n            <Logo />\r\n          </RouterLink>\r\n          <Button\r\n            component={RouterLink}\r\n            to=\"/\"\r\n            className={classes.backButton}\r\n          >\r\n            Back to home\r\n          </Button>\r\n        </Box>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h2\"\r\n              color=\"textPrimary\"\r\n            >\r\n              Sign up\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              Sign up on the internal platform\r\n            </Typography>\r\n            <Box mt={3}>\r\n              <RegisterForm onSubmitSuccess={handleSubmitSuccess} />\r\n            </Box>\r\n            <Box my={2}>\r\n              <Divider />\r\n            </Box>\r\n            <Link\r\n              component={RouterLink}\r\n              to=\"/login\"\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              Have an account?\r\n            </Link>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default RegisterView;\r\n"],"sourceRoot":""}